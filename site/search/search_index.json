{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python Biella Group: Bear This project it's the base template for a Python project that we are using in PythonBiellaGroup to create our tools, libraries and projects. We call it Bear because it's a B ase E nvironment for A ny R easonable project and also because the bear it's the symbol of the city of Biella. It's based on Modern Python Tools such as: - cookiecutter: for templating - poetry: for dependency management - pdm: for dependency management - flake8: for linting - mypy: for static type checking - black: for code formatting - bandit: for security checks - pre-commit: for pre-commit hooks - pdm: for linting We suggest to use VSCode as IDE for this project since you can find a lot of prepared configurations for: - debugging - testing - settings - extensions You can find and extensive documentation created with mkdocs to this github page link How to use it You can use this repository as a template to create your own project with cookiecutter Just remember to add cookiecutter as a dependency into your local version installation of python using pip (or something else) pip install cookiecutter You can use this following command (both on Windows and Posix systems): cookiecutter gh:PythonBiellaGroup/bear Or also with the full https path: cookiecutter https://github.com/PythonBiellaGroup/Bear once you launch this commands just follow the guide and fill the required fields. How to maintain it Unfortunately there is no automatic way to update the templates inside cookiecutter yet, you have to do it manually. Clone the repository Launch the dependency installation using: poetry or pdm poetry install or pdm install Modify something If you want to test a specific inner template (like the Base template) you can launch: cookiecutter . to test cookiecutter project generation After that you can modify the template When you finish your modification you have to copy and paste all the modifications manually inside the cookiecutter generation folder Then remember to open a pull request or push to the repository (in develop firtst) if you have the permissions. Please remember also to follow a Gitflow workflow and to use the develop branch as the main branch for development. Documentation To build and maintain the documentatio How to contribute You can help us to improve this project by opening issues or doing some pull request if you want to add more functionalities or if you want to fix some bugs. Please follow the Contributing guidelines to contribute to this project. License This repository is licensed under the MIT license. See LICENSE file for details. If you use this repository in your work, please cite it as or just write to us to say thanks with your feedback and experience :) Documentation Useful links and other documentation website you can check Our website with the documentation The repository for our documentation Hypermodern python repository The hypermodern python official medium article Modern Python repository Awesome Pyproject Python developer roadmap Creating a modern python development environment medium article Modern python interesting practices 4 Keys to write modern python in 2022","title":"Startup"},{"location":"#python-biella-group-bear","text":"This project it's the base template for a Python project that we are using in PythonBiellaGroup to create our tools, libraries and projects. We call it Bear because it's a B ase E nvironment for A ny R easonable project and also because the bear it's the symbol of the city of Biella. It's based on Modern Python Tools such as: - cookiecutter: for templating - poetry: for dependency management - pdm: for dependency management - flake8: for linting - mypy: for static type checking - black: for code formatting - bandit: for security checks - pre-commit: for pre-commit hooks - pdm: for linting We suggest to use VSCode as IDE for this project since you can find a lot of prepared configurations for: - debugging - testing - settings - extensions You can find and extensive documentation created with mkdocs to this github page link","title":"Python Biella Group: Bear"},{"location":"#how-to-use-it","text":"You can use this repository as a template to create your own project with cookiecutter Just remember to add cookiecutter as a dependency into your local version installation of python using pip (or something else) pip install cookiecutter You can use this following command (both on Windows and Posix systems): cookiecutter gh:PythonBiellaGroup/bear Or also with the full https path: cookiecutter https://github.com/PythonBiellaGroup/Bear once you launch this commands just follow the guide and fill the required fields.","title":"How to use it"},{"location":"#how-to-maintain-it","text":"Unfortunately there is no automatic way to update the templates inside cookiecutter yet, you have to do it manually. Clone the repository Launch the dependency installation using: poetry or pdm poetry install or pdm install Modify something If you want to test a specific inner template (like the Base template) you can launch: cookiecutter . to test cookiecutter project generation After that you can modify the template When you finish your modification you have to copy and paste all the modifications manually inside the cookiecutter generation folder Then remember to open a pull request or push to the repository (in develop firtst) if you have the permissions. Please remember also to follow a Gitflow workflow and to use the develop branch as the main branch for development.","title":"How to maintain it"},{"location":"#documentation","text":"To build and maintain the documentatio","title":"Documentation"},{"location":"#how-to-contribute","text":"You can help us to improve this project by opening issues or doing some pull request if you want to add more functionalities or if you want to fix some bugs. Please follow the Contributing guidelines to contribute to this project.","title":"How to contribute"},{"location":"#license","text":"This repository is licensed under the MIT license. See LICENSE file for details. If you use this repository in your work, please cite it as or just write to us to say thanks with your feedback and experience :)","title":"License"},{"location":"#documentation_1","text":"Useful links and other documentation website you can check Our website with the documentation The repository for our documentation Hypermodern python repository The hypermodern python official medium article Modern Python repository Awesome Pyproject Python developer roadmap Creating a modern python development environment medium article Modern python interesting practices 4 Keys to write modern python in 2022","title":"Documentation"},{"location":"404/","text":"","title":"404"},{"location":"documentation/","text":"","title":"Index"},{"location":"documentation/logger/","text":"","title":"Logger"},{"location":"documentation/settings/","text":"","title":"Settings"},{"location":"general/","text":"","title":"Index"},{"location":"reference/","text":"provalo Official documentation tool and example for you project Documentation page with mkdocs Try to insert a code block import os os . path . join ( folder , path ) Try to insert some multi line latex math equations :smile: (You can use also the emoji!) \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] Latex math equation in a single line The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) . Test with grouping code bloc C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } It's possible also using datatables Method Description GET :material-check: Fetch resource PUT :material-check-all: Update resource DELETE :material-close: Delete resource And also footnotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Insert and example image You can insert images also using directly HTML (You can directly inser HTML inside the markdown and the page) Image caption Try to use some checklists Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"References"},{"location":"reference/#provalo","text":"Official documentation tool and example for you project Documentation page with mkdocs Try to insert a code block import os os . path . join ( folder , path ) Try to insert some multi line latex math equations :smile: (You can use also the emoji!) \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] Latex math equation in a single line The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) . Test with grouping code bloc C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } It's possible also using datatables Method Description GET :material-check: Fetch resource PUT :material-check-all: Update resource DELETE :material-close: Delete resource And also footnotes Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Insert and example image You can insert images also using directly HTML (You can directly inser HTML inside the markdown and the page) Image caption Try to use some checklists Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"provalo"}]}
